"""add users

Revision ID: 0569209455b1
Revises: 6f058579e2ab
Create Date: 2020-03-11 22:33:22.524872

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "0569209455b1"
down_revision = "6f058579e2ab"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "group",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("createdAt", sa.DateTime(), nullable=True),
        sa.Column("createdBy", sa.String(), nullable=True),
        sa.Column("updatedAt", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(), nullable=False),
        sa.Column("password", sa.String(), nullable=True),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("firstname", sa.String(), nullable=False),
        sa.Column("lastname", sa.String(), nullable=False),
        sa.Column("is_admin", sa.Boolean(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("createdAt", sa.DateTime(), nullable=True),
        sa.Column("createdBy", sa.String(), nullable=True),
        sa.Column("updatedAt", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("username"),
    )
    op.create_table(
        "token",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("token", sa.String(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("createdAt", sa.DateTime(), nullable=True),
        sa.Column("createdBy", sa.String(), nullable=True),
        sa.Column("updatedAt", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.UniqueConstraint("token"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "users_groups",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("group_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["group_id"],
            ["group.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
    )
    with op.batch_alter_table("collection", schema=None) as batch_op:
        batch_op.create_foreign_key(None, "user", ["createdBy"], ["username"])
        batch_op.drop_column("deletedAt")
        batch_op.drop_column("deleted")

    with op.batch_alter_table("container", schema=None) as batch_op:
        batch_op.create_foreign_key(None, "user", ["createdBy"], ["username"])
        batch_op.drop_column("deletedAt")
        batch_op.drop_column("deleted")

    with op.batch_alter_table("entity", schema=None) as batch_op:
        batch_op.create_foreign_key(None, "user", ["createdBy"], ["username"])
        batch_op.drop_column("deletedAt")
        batch_op.drop_column("deleted")

    with op.batch_alter_table("image", schema=None) as batch_op:
        batch_op.create_foreign_key(None, "user", ["createdBy"], ["username"])
        batch_op.drop_column("deletedAt")
        batch_op.drop_column("deleted")

    with op.batch_alter_table("tag", schema=None) as batch_op:
        batch_op.create_foreign_key(None, "user", ["createdBy"], ["username"])
        batch_op.drop_column("deletedAt")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("tag", schema=None) as batch_op:
        batch_op.add_column(sa.Column("deletedAt", sa.DATETIME(), nullable=True))
        batch_op.drop_constraint(None, type_="foreignkey")

    with op.batch_alter_table("image", schema=None) as batch_op:
        batch_op.add_column(sa.Column("deleted", sa.BOOLEAN(), nullable=False))
        batch_op.add_column(sa.Column("deletedAt", sa.DATETIME(), nullable=True))
        batch_op.drop_constraint(None, type_="foreignkey")

    with op.batch_alter_table("entity", schema=None) as batch_op:
        batch_op.add_column(sa.Column("deleted", sa.BOOLEAN(), nullable=False))
        batch_op.add_column(sa.Column("deletedAt", sa.DATETIME(), nullable=True))
        batch_op.drop_constraint(None, type_="foreignkey")

    with op.batch_alter_table("container", schema=None) as batch_op:
        batch_op.add_column(sa.Column("deleted", sa.BOOLEAN(), nullable=False))
        batch_op.add_column(sa.Column("deletedAt", sa.DATETIME(), nullable=True))
        batch_op.drop_constraint(None, type_="foreignkey")

    with op.batch_alter_table("collection", schema=None) as batch_op:
        batch_op.add_column(sa.Column("deleted", sa.BOOLEAN(), nullable=False))
        batch_op.add_column(sa.Column("deletedAt", sa.DATETIME(), nullable=True))
        batch_op.drop_constraint(None, type_="foreignkey")

    op.drop_table("users_groups")
    op.drop_table("token")
    op.drop_table("user")
    op.drop_table("group")
    # ### end Alembic commands ###
