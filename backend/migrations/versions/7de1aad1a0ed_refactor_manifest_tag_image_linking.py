"""refactor manifest->tag->image linking

Revision ID: 7de1aad1a0ed
Revises: 1a080fdf898e
Create Date: 2021-06-11 18:56:38.538880

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '7de1aad1a0ed'
down_revision = '1a080fdf898e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()

    op.add_column('tag', sa.Column('arch', sa.String(), nullable=True))
    op.add_column('tag', sa.Column('container_id', sa.Integer()))
    op.drop_constraint('name_image_id_idx', 'tag', type_='unique')
    op.create_unique_constraint('tag_name_container_arch_idx', 'tag', ['name', 'container_id', 'arch'])
    op.create_foreign_key(op.f('fk_tag_container_id_container'), 'tag', 'container', ['container_id'], ['id'])
    conn.execute(sa.text("UPDATE tag SET container_id=(SELECT container_id FROM image WHERE image.id=tag.image_id), arch=(SELECT arch FROM image WHERE image.id=tag.container_id)"))
    op.alter_column('tag', 'container_id', nullable=False)

    op.add_column('manifest', sa.Column('container_id', sa.Integer()))
    op.drop_constraint('uq_manifest_hash', 'manifest', type_='unique')
    op.create_unique_constraint('manifest_hash_container_idx', 'manifest', ['hash', 'container_id'])
    op.create_foreign_key(op.f('fk_manifest_container_id_container'), 'manifest', 'container', ['container_id'], ['id'])
    conn.execute(sa.text("UPDATE manifest SET container_id=(SELECT min(container_id) FROM tag WHERE tag.manifest_id=manifest.id)"))
    conn.execute(sa.text("DELETE FROM manifest WHERE container_id IS NULL"))
    op.alter_column('manifest', 'container_id', nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('fk_tag_container_id_container'), 'tag', type_='foreignkey')
    op.drop_constraint('tag_name_container_arch_idx', 'tag', type_='unique')
    op.create_unique_constraint('name_image_id_idx', 'tag', ['name', 'image_id'])
    op.drop_column('tag', 'container_id')
    op.drop_column('tag', 'arch')
    op.drop_constraint(op.f('fk_manifest_container_id_container'), 'manifest', type_='foreignkey')
    op.drop_constraint('manifest_hash_container_idx', 'manifest', type_='unique')
    op.create_unique_constraint('uq_manifest_hash', 'manifest', ['hash'])
    op.drop_column('manifest', 'container_id')
    # ### end Alembic commands ###
