{% import 'typescript/utils.ts.j2' as utils %}

export enum GroupRoles {
  admin = 'admin',
  contributor = 'contributor',
  readonly = 'readonly',
}

import { find as _find } from 'lodash';
class {{classname}} {
  {{utils.auto_attributes(fields)}}

  public getRole(user: User | null): string | null {
    if (!user) {
      return null;
    }
    const member = _find(this.users, ug => ug.user.username === user.username);
    return !member ? null : member.role;
  }

  public get prettyQuota(): string {
    return prettyBytes(this.quota);
  }
  public set prettyQuota(quota: string) {
    this.quota = unPrettyBytes(quota);
  }

}

export function plainTo{{classname}}(json: any): {{classname}} {
  const obj = new {{classname}}();
  {{utils.deserialize(fields)}}
  return obj;
}
// eslint-disable-next-line @typescript-eslint/no-unused-vars
export function serialize{{classname}}(obj: {{classname}}, unroll=false): any {
  const json: any = {};
  {{utils.serialize(fields)}}
  return json;
}

export { {{classname}} };
